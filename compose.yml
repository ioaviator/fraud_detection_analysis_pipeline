services:
  kafka:
    image: 'bitnami/kafka:4.0.0'
    hostname: kafka
    ports:
      - '9094:9094'
      - "9092:9092"
    environment:
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093,EXTERNAL://:9094
      - KAFKA_CFG_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092,EXTERNAL://localhost:9094
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,EXTERNAL:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
    volumes:
      - kafka_data:/bitnami/kafka
    networks:
      - finguard
  kafka-ui:
    container_name: kafka-ui-1
    image: provectuslabs/kafka-ui:v0.7.2
    ports:
      - 8082:8080
    depends_on:
      - kafka
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: PLAINTEXT://kafka:9092
      DYNAMIC_CONFIG_ENABLED: 'true'
    networks:
      - finguard
  connect:
    image: quay.io/debezium/connect:3.3
    depends_on: [kafka]
    ports: ["8083:8083"]
    environment:
      BOOTSTRAP_SERVERS: kafka:9092
      GROUP_ID: 1
      CONFIG_STORAGE_TOPIC: connect_configs
      OFFSET_STORAGE_TOPIC: connect_offsets
      STATUS_STORAGE_TOPIC: connect_statuses
      KEY_CONVERTER_SCHEMAS_ENABLE: "false"
      VALUE_CONVERTER_SCHEMAS_ENABLE: "false"
    networks:
      - finguard

  # spark-master:
  #   image: bitnami/spark:3.5.5
  #   environment:
  #     - SPARK_MODE=master
  #     - SPARK_RPC_AUTHENTICATION_ENABLED=no
  #     - SPARK_RPC_ENCRYPTION_ENABLED=no
  #     - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
  #     - SPARK_SSL_ENABLED=no
  #     - SPARK_MASTER_WEBUI_PORT=8081
  #   ports:
  #     - "8081:8081"
  #     - "7077:7077"
  #   volumes:
  #     - spark-data:/bitnami
  #     - ./include:/usr/local/airflow/include
  #     - ./apps:/opt/spark-apps
  #     - ./data:/opt/spark-data
  #   networks:
  #     - finguard
  # spark-worker:
  #   image: bitnami/spark:3.5.5
  #   environment:
  #     - SPARK_MODE=worker
  #     - SPARK_MASTER_URL=spark://spark-master:7077
  #     - SPARK_WORKER_MEMORY=2G
  #     - SPARK_WORKER_CORES=2
  #     - SPARK_RPC_AUTHENTICATION_ENABLED=no
  #     - SPARK_RPC_ENCRYPTION_ENABLED=no
  #     - SPARK_LOCAL_STORAGE_ENCRYPTION_ENABLED=no
  #     - SPARK_SSL_ENABLED=no
  #   volumes:
  #     - ./include:/usr/local/airflow/include
  #     - spark-data:/bitnami
  #     - ./apps:/opt/spark-apps
  #     - ./data:/opt/spark-data
  #   depends_on:
  #     - spark-master
  #   networks:
  #     - finguard
  postgres:
    image: postgres:16.9
    container_name: postgres_db
    restart: always
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: FinGuard_db
    ports:
      - "5434:5432"
    command: postgres -c wal_level=logical -c max_wal_senders=10 -c max_replication_slots=10
    volumes:
      - postgres_data:/var/lib/postgres/data
    networks:
      - finguard
  pgadmin:
    image: dpage/pgadmin4:9
    container_name: pgadmin
    restart: always
    environment: 
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    ports:
      - "5050:80"
    depends_on:
      - postgres
    networks:
      - finguard

volumes:
  postgres_data:
  kafka_data:
  # spark-data:

networks:
  finguard:
